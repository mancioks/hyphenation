<?php

use Hyphenator\Hyphenate;

require 'config.php';
require PROJECT_ROOT_DIR.'/vendor/autoload.php';

define('CLI', true);

if($argc > 0) {
    if($argc == 1) {
        echo "for help, type:\nphp hyphen -h";
    }
    if(isset($argv[1]) && $argv[1] == "-h") {
        echo "php hyphen migrate -w [filename] - migrate words to database\n";
        echo "php hyphen migrate -p [filename] - migrate patterns to database\n";
        echo "php hyphen -w [word] -d - hyphenate word (DB)\n";
        echo "php hyphen -w [word] -f - hyphenate word (File)\n";
    }
    if(isset($argv[1]) && $argv[1] == "migrate") {
        if(isset($argv[2]) && $argv[2] == "-w" || isset($argv[2]) && $argv[2] == "-p") {
            if(isset($argv[3])) {
                $file = $argv[3];
                $table = null;
                if($argv[2] == "-w") $table = "words";
                if($argv[2] == "-p") $table = "patterns";

                $db = new \Helper\Database();

                $db->query('truncate table '.$table)->exec();
                $db->query('truncate table hyphenated_patterns')->exec();
                $db->query('truncate table hyphenated')->exec();

                $fileContents = \Helper\FileHelper::getContents($file);

                $db->begin();

                $db->query('INSERT INTO '.$table.' (value) VALUES (?)');

                foreach ($fileContents as $line) {
                    $db->exec([$line]);
                    //echo $db->lastId();
                }

                $db->commit();

                echo "migration success";
            }
        }
    }
    if(isset($argv[1]) && $argv[1] == "-w") {
        $word = $argv[2];
        $source = $argv[3] == '-d' ? 'db' : 'file';

        if($source == 'db') {
            $pattern = \Data\Pattern::getAllPatternsFromDb();
        } else {
            $pattern = \Data\Pattern::getAllPatterns(PROJECT_ROOT_DIR.'/var/pattern.txt');
        }

        $hyphenator = new \Hyphenator\Hyphenate();

        if($source == 'db') {
            if(!$hyphenator->loadFromDb($word)) {
                $hyphenator->hyphenate($word, $pattern);
                $hyphenator->insertIntoDb();
            }
        } else {
            $hyphenator->hyphenate($word, $pattern);
        }

        echo "Hyphenated: ".$hyphenator->getHyphenated()."\n";
        if($source == 'db') {
            echo "Patterns found:\n";
            foreach ($hyphenator->getFoundPatterns() as $pattern) {
                echo $pattern->getPattern()."\n";
            }
        }
    }
}